<?php
// –†–∞–±–æ—á–∏–π —Ç–µ—Å—Ç SMTP —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
header('Content-Type: text/html; charset=utf-8');

echo "<h1>üéØ –†–∞–±–æ—á–∏–π —Ç–µ—Å—Ç SMTP —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π</h1>";

require_once 'config.php';

echo "<div style='background: #f5f5f5; padding: 15px; margin: 15px 0; border-radius: 5px;'>";
echo "<h3>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h3>";
echo "<strong>SMTP Host:</strong> " . SMTP_HOST . "<br>";
echo "<strong>SMTP Port:</strong> " . SMTP_PORT . "<br>";
echo "<strong>SMTP Username:</strong> " . SMTP_USERNAME . "<br>";
echo "<strong>From Email:</strong> " . SMTP_FROM_EMAIL . "<br>";
echo "<strong>To Email:</strong> " . SMTP_TO_EMAIL . "<br>";
echo "</div>";

function testSMTPWithAuth($host, $port, $username, $password, $method_name) {
    echo "<div style='background: #e8f5e8; padding: 15px; margin: 15px 0; border-radius: 5px; border-left: 4px solid #28a745;'>";
    echo "<h3>üîß –¢–µ—Å—Ç: $method_name</h3>";
    
    try {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if ($port == 465) {
            $connection_string = "ssl://$host:$port";
            $secure = 'ssl';
        } elseif ($port == 587) {
            $connection_string = "$host:$port";
            $secure = 'tls';
        } else {
            $connection_string = "$host:$port";
            $secure = 'none';
        }
        
        echo "<div>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: $connection_string (Secure: $secure)</div>";
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        $context = stream_context_create([
            "ssl" => [
                "verify_peer" => false,
                "verify_peer_name" => false,
                "allow_self_signed" => true
            ]
        ]);
        
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è
        $socket = @stream_socket_client(
            $connection_string,
            $errno,
            $errstr,
            30,
            STREAM_CLIENT_CONNECT,
            $context
        );
        
        if (!$socket) {
            echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: $errstr ($errno)</div>";
            return false;
        }
        
        echo "<div style='color: green;'>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ</div>";
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
        stream_set_timeout($socket, 10);
        
        // –ß–∏—Ç–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        $response = fgets($socket, 515);
        echo "<div>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
        
        if (!$response || substr($response, 0, 3) !== "220") {
            echo "<div style='color: red;'>‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞</div>";
            fclose($socket);
            return false;
        }
        
        // –î–ª—è TLS –Ω–∞ –ø–æ—Ä—Ç—É 587 –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å STARTTLS
        if ($port == 587) {
            fwrite($socket, "STARTTLS\r\n");
            $response = fgets($socket, 515);
            echo "<div>STARTTLS: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
            
            if (substr($response, 0, 3) === "220") {
                // –í–∫–ª—é—á–∞–µ–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
                stream_socket_enable_crypto($socket, true, STREAM_CRYPTO_METHOD_TLS_CLIENT);
                echo "<div style='color: green;'>‚úÖ TLS –≤–∫–ª—é—á–µ–Ω</div>";
            } else {
                echo "<div style='color: red;'>‚ùå STARTTLS –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è</div>";
                fclose($socket);
                return false;
            }
            
            // –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º EHLO –ø–æ—Å–ª–µ TLS
            fwrite($socket, "EHLO " . gethostname() . "\r\n");
        } else {
            // –î–ª—è SSL —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º EHLO
            fwrite($socket, "EHLO " . gethostname() . "\r\n");
        }
        
        // –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç EHLO
        $ehlo_response = "";
        while (true) {
            $line = fgets($socket, 515);
            if (!$line) break;
            
            $ehlo_response .= $line;
            echo "<div>EHLO: <code>" . htmlspecialchars(trim($line)) . "</code></div>";
            
            if (substr($line, 3, 1) === " ") break;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É AUTH
        if (strpos($ehlo_response, 'AUTH') !== false) {
            echo "<div style='color: green;'>‚úÖ AUTH –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è</div>";
            
            // –ù–∞—á–∏–Ω–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é LOGIN
            fwrite($socket, "AUTH LOGIN\r\n");
            $response = fgets($socket, 515);
            echo "<div>AUTH LOGIN: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
            
            if (substr($response, 0, 3) === "334") {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–Ω –≤ base64
                fwrite($socket, base64_encode($username) . "\r\n");
                $response = fgets($socket, 515);
                echo "<div>Username: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
                
                if (substr($response, 0, 3) === "334") {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ base64
                    fwrite($socket, base64_encode($password) . "\r\n");
                    $response = fgets($socket, 515);
                    echo "<div>Password: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
                    
                    if (substr($response, 0, 3) === "235") {
                        echo "<div style='color: green; font-weight: bold;'>‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!</div>";
                        
                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
                        $result = sendTestEmail($socket, SMTP_FROM_EMAIL, SMTP_TO_EMAIL);
                        
                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                        fwrite($socket, "QUIT\r\n");
                        fclose($socket);
                        
                        return $result;
                    } else {
                        echo "<div style='color: red; font-weight: bold;'>‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏!</div>";
                        echo "<div><strong>–ö–æ–¥ –æ—à–∏–±–∫–∏:</strong> " . substr($response, 0, 3) . "</div>";
                        
                        if (substr($response, 0, 3) === "535") {
                            echo "<div style='background: #fff3cd; padding: 10px; margin: 10px 0; border-radius: 5px;'>";
                            echo "<strong>üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ 535:</strong><br>";
                            echo "‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å<br>";
                            echo "‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π<br>";
                            echo "‚Ä¢ SMTP –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Mail.ru<br>";
                            echo "‚Ä¢ IP –∞–¥—Ä–µ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω<br>";
                            echo "</div>";
                        }
                    }
                } else {
                    echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∏–Ω–∞</div>";
                }
            } else {
                echo "<div style='color: red;'>‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</div>";
            }
        } else {
            echo "<div style='color: red;'>‚ùå AUTH –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è</div>";
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        fwrite($socket, "QUIT\r\n");
        fclose($socket);
        
        return false;
        
    } catch (Exception $e) {
        echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "</div>";
        return false;
    }
    
    echo "</div>";
}

function sendTestEmail($socket, $from, $to) {
    try {
        echo "<div style='background: #f0f8ff; padding: 10px; margin: 10px 0; border-radius: 5px;'>";
        echo "<strong>üìß –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞...</strong></div>";
        
        // MAIL FROM
        fwrite($socket, "MAIL FROM:<$from>\r\n");
        $response = fgets($socket, 515);
        echo "<div>MAIL FROM: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
        
        if (substr($response, 0, 3) !== "250") {
            echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è</div>";
            return false;
        }
        
        // RCPT TO
        fwrite($socket, "RCPT TO:<$to>\r\n");
        $response = fgets($socket, 515);
        echo "<div>RCPT TO: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
        
        if (substr($response, 0, 3) !== "250") {
            echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è</div>";
            return false;
        }
        
        // DATA
        fwrite($socket, "DATA\r\n");
        $response = fgets($socket, 515);
        echo "<div>DATA: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
        
        if (substr($response, 0, 3) !== "354") {
            echo "<div style='color: red;'>‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞</div>";
            return false;
        }
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∏—Å—å–º–æ
        $subject = "–¢–µ—Å—Ç SMTP - –†–∞–±–æ—á–∏–π –≤–∞—Ä–∏–∞–Ω—Ç";
        $body = "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ zubkov.space\n\n";
        $body .= "–í—Ä–µ–º—è: " . date('Y-m-d H:i:s') . "\n";
        $body .= "–ú–µ—Ç–æ–¥: " . ($_POST['method'] ?? 'SSL/TLS') . "\n";
        $body .= "IP: " . $_SERVER['REMOTE_ADDR'] . "\n";
        $body .= "Host: " . $_SERVER['HTTP_HOST'] . "\n\n";
        $body .= "–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç SMTP —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!";
        
        $email_data = "From: $from\r\n";
        $email_data .= "To: $to\r\n";
        $email_data .= "Subject: $subject\r\n";
        $email_data .= "MIME-Version: 1.0\r\n";
        $email_data .= "Content-Type: text/plain; charset=UTF-8\r\n";
        $email_data .= "\r\n";
        $email_data .= "$body\r\n";
        $email_data .= ".\r\n";
        
        fwrite($socket, $email_data);
        $response = fgets($socket, 515);
        echo "<div>–û—Ç–ø—Ä–∞–≤–∫–∞: <code>" . htmlspecialchars(trim($response)) . "</code></div>";
        
        if (substr($response, 0, 3) === "250") {
            echo "<div style='color: green; font-weight: bold; font-size: 18px; background: #d4edda; padding: 15px; border-radius: 5px; margin: 10px 0;'>üéâ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</div>";
            echo "<p>–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ <strong>$to</strong></p>";
            echo "<p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫!</p>";
            return true;
        } else {
            echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞</div>";
            return false;
        }
        
    } catch (Exception $e) {
        echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " . $e->getMessage() . "</div>";
        return false;
    }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
$success = false;

echo "<h2>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</h2>";

// –ú–µ—Ç–æ–¥ 1: SSL –Ω–∞ –ø–æ—Ä—Ç—É 465 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π)
$success = testSMTPWithAuth(
    SMTP_HOST, 
    465, 
    SMTP_USERNAME, 
    SMTP_PASSWORD, 
    "SSL –Ω–∞ –ø–æ—Ä—Ç—É 465 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
) || $success;

// –ú–µ—Ç–æ–¥ 2: TLS –Ω–∞ –ø–æ—Ä—Ç—É 587
$success = testSMTPWithAuth(
    SMTP_HOST, 
    587, 
    SMTP_USERNAME, 
    SMTP_PASSWORD, 
    "TLS –Ω–∞ –ø–æ—Ä—Ç—É 587"
) || $success;

echo "<div style='margin: 30px 0; text-align: center;'>";
echo "<a href='javascript:history.back()' style='display: inline-block; padding: 12px 24px; background: #6c757d; color: white; text-decoration: none; border-radius: 5px; margin: 5px;'>‚Üê –ù–∞–∑–∞–¥</a>";

if ($success) {
    echo "<a href='send_message_smtp_final.php' style='display: inline-block; padding: 12px 24px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; margin: 5px;'>üìß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SMTP –æ–±—Ä–∞–±–æ—Ç—á–∏–∫</a>";
    echo "<a href='index.php' style='display: inline-block; padding: 12px 24px; background: #17a2b8; color: white; text-decoration: none; border-radius: 5px; margin: 5px;'>üè† –ù–∞ —Å–∞–π—Ç</a>";
}

echo "</div>";

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if (!$success) {
    echo "<div style='background: #fff3cd; padding: 20px; margin: 20px 0; border-radius: 5px; border: 1px solid #ffeaa7;'>";
    echo "<h3>‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:</h3>";
    echo "<ol>";
    echo "<li><strong>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å:</strong> –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ config.php —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å</li>";
    echo "<li><strong>–ü–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:</strong> –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä–æ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ Mail.ru</li>";
    echo "<li><strong>–í–∫–ª—é—á–∏—Ç–µ SMTP:</strong> –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü–æ—á—Ç–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã ‚Üí –í–∫–ª—é—á–∏—Ç–µ SMTP</li>";
    echo "<li><strong>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ—Ç –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –±–ª–æ–∫–∏—Ä—É—é—â–µ–π SMTP</li>";
    echo "</ol>";
    echo "</div>";
}
?>