<?php
// –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç SMTP —Å –ª—É—á—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—Ç–≤–µ—Ç–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞
header('Content-Type: text/html; charset=utf-8');

echo "<h1>–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç SMTP</h1>";

require_once 'config.php';

echo "<div style='background: #f5f5f5; padding: 15px; margin: 15px 0; border-radius: 5px;'>";
echo "<h3>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</h3>";
echo "<strong>SMTP Host:</strong> " . SMTP_HOST . "<br>";
echo "<strong>SMTP Port:</strong> " . SMTP_PORT . "<br>";
echo "<strong>SMTP Username:</strong> " . SMTP_USERNAME . "<br>";
echo "<strong>SMTP Password:</strong> " . (SMTP_PASSWORD === 'your_password_here' ? '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω') . "<br>";
echo "<strong>From Email:</strong> " . SMTP_FROM_EMAIL . "<br>";
echo "<strong>To Email:</strong> " . SMTP_TO_EMAIL . "<br>";
echo "</div>";

if (SMTP_PASSWORD === 'your_password_here') {
    echo "<div style='color: red; font-weight: bold; padding: 15px; background: #ffe6e6; border-radius: 5px;'>";
    echo "‚ùå –ü–∞—Ä–æ–ª—å SMTP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!<br>";
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ config.php –∏ –∑–∞–º–µ–Ω–∏—Ç–µ 'your_password_here' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å.";
    echo "</div>";
    exit;
}

// –§—É–Ω–∫—Ü–∏—è —á—Ç–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ –æ—Ç–≤–µ—Ç–∞ SMTP
function readAllResponses($socket) {
    $responses = [];
    while ($line = fgets($socket, 515)) {
        $line = trim($line);
        if (empty($line)) break;
        $responses[] = $line;
        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –æ—Ç–≤–µ—Ç–∞ (–Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ–¥–∞)
        if (substr($line, 3, 1) !== ' ') break;
    }
    return $responses;
}

// –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SMTP —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
function testSMTPImproved($host, $port, $username, $password, $from_email, $to_email) {
    try {
        echo "<div style='margin: 15px 0; padding: 15px; background: #f8f9fa; border-radius: 5px;'>";
        echo "<h4>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $host:$port</h4>";

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è SSL
        $context = stream_context_create([
            "ssl" => [
                "verify_peer" => false,
                "verify_peer_name" => false,
                "allow_self_signed" => true
            ]
        ]);

        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ SMTP —Å–µ—Ä–≤–µ—Ä—É
        $socket = @stream_socket_client(
            $host . ":" . $port,
            $errno,
            $errstr,
            30,
            STREAM_CLIENT_CONNECT,
            $context
        );

        if (!$socket) {
            echo "<div style='color: red;'>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: $errstr</div></div>";
            return false;
        }

        echo "<div style='color: green;'>‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</div>";

        // –ß–∏—Ç–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        $greeting = fgets($socket, 515);
        echo "<div>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: " . htmlspecialchars(trim($greeting)) . "</div>";

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º EHLO
        fwrite($socket, "EHLO " . $_SERVER['HTTP_HOST'] . "\r\n");
        $ehlo_responses = readAllResponses($socket);
        echo "<div>EHLO –æ—Ç–≤–µ—Ç—ã:<br>";
        foreach ($ehlo_responses as $response) {
            echo "‚Ä¢ " . htmlspecialchars($response) . "<br>";
        }
        echo "</div>";

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ AUTH –≤ –æ—Ç–≤–µ—Ç–∞—Ö
        $has_auth = false;
        foreach ($ehlo_responses as $response) {
            if (strpos(strtoupper($response), 'AUTH') !== false) {
                $has_auth = true;
                break;
            }
        }

        if (!$has_auth) {
            echo "<div style='color: orange;'>‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ —è–≤–Ω–æ —É–∫–∞–∑–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É AUTH, –ø—Ä–æ–±—É–µ–º anyway</div>";
        }

        // –ü—Ä–æ–±—É–µ–º AUTH LOGIN
        fwrite($socket, "AUTH LOGIN\r\n");
        $auth_response = fgets($socket, 515);
        echo "<div>AUTH LOGIN: " . htmlspecialchars(trim($auth_response)) . "</div>";

        if (substr($auth_response, 0, 3) !== "334") {
            echo "<div style='color: red;'>‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –ª–æ–≥–∏–Ω</div></div>";
            fclose($socket);
            return false;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–Ω (username)
        fwrite($socket, base64_encode($username) . "\r\n");
        $user_response = fgets($socket, 515);
        echo "<div>Username response: " . htmlspecialchars(trim($user_response)) . "</div>";

        if (substr($user_response, 0, 3) !== "334") {
            echo "<div style='color: red;'>‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –ø–∞—Ä–æ–ª—å</div></div>";
            fclose($socket);
            return false;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
        fwrite($socket, base64_encode($password) . "\r\n");
        $pass_response = fgets($socket, 515);
        echo "<div>Password response: " . htmlspecialchars(trim($pass_response)) . "</div>";

        if (substr($pass_response, 0, 3) === "235") {
            echo "<div style='color: green;'>‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!</div>";

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
            fwrite($socket, "MAIL FROM:<" . $from_email . ">\r\n");
            $mail_response = fgets($socket, 515);
            echo "<div>MAIL FROM: " . htmlspecialchars(trim($mail_response)) . "</div>";

            fwrite($socket, "RCPT TO:<" . $to_email . ">\r\n");
            $rcpt_response = fgets($socket, 515);
            echo "<div>RCPT TO: " . htmlspecialchars(trim($rcpt_response)) . "</div>";

            fwrite($socket, "DATA\r\n");
            $data_response = fgets($socket, 515);
            echo "<div>DATA: " . htmlspecialchars(trim($data_response)) . "</div>";

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
            $email_data = "From: " . $from_email . "\r\n";
            $email_data .= "To: " . $to_email . "\r\n";
            $email_data .= "Subject: –¢–µ—Å—Ç SMTP zubkov.space\r\n";
            $email_data .= "MIME-Version: 1.0\r\n";
            $email_data .= "Content-Type: text/plain; charset=UTF-8\r\n";
            $email_data .= "\r\n";
            $email_data .= "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã SMTP.\r\n";
            $email_data .= "–í—Ä–µ–º—è: " . date('Y-m-d H:i:s') . "\r\n";
            $email_data .= "–°–µ—Ä–≤–µ—Ä: " . $_SERVER['HTTP_HOST'] . "\r\n";
            $email_data .= "\r\n.\r\n";

            fwrite($socket, $email_data);
            $final_response = fgets($socket, 515);
            echo "<div>–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: " . htmlspecialchars(trim($final_response)) . "</div>";

            if (substr($final_response, 0, 3) === "250") {
                echo "<div style='color: green; font-weight: bold; font-size: 18px;'>üéâ SMTP —Ä–∞–±–æ—Ç–∞–µ—Ç!</div>";
                echo "<p>‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ $to_email</p>";
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                fwrite($socket, "QUIT\r\n");
                fclose($socket);
                
                return true;
            } else {
                echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞</div>";
            }
        } else {
            echo "<div style='color: red;'>‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</div>";
            echo "<div style='background: #fff3cd; padding: 10px; margin: 10px 0; border-radius: 5px;'>";
            echo "<strong>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</strong><br>";
            echo "‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å<br>";
            echo "‚Ä¢ –ù—É–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å SMTP –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Mail.ru<br>";
            echo "‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π<br>";
            echo "‚Ä¢ –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞</div>";
        }

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        fwrite($socket, "QUIT\r\n");
        fclose($socket);

        return false;

    } catch (Exception $e) {
        echo "<div style='color: red;'>‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "</div></div>";
        return false;
    }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
$tests = [
    [
        'host' => 'smtp.mail.ru',
        'port' => 465,
        'name' => 'Mail.ru SSL (465)'
    ],
    [
        'host' => 'smtp.mail.ru',
        'port' => 587,
        'name' => 'Mail.ru TLS (587)'
    ]
];

$any_success = false;

foreach ($tests as $test) {
    $success = testSMTPImproved(
        $test['host'],
        $test['port'],
        SMTP_USERNAME,
        SMTP_PASSWORD,
        SMTP_FROM_EMAIL,
        SMTP_TO_EMAIL
    );
    
    if ($success) {
        $any_success = true;
        break; // –ï—Å–ª–∏ –æ–¥–∏–Ω –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    }
}

if ($any_success) {
    echo "<div style='background: #d4edda; padding: 20px; margin: 20px 0; border-radius: 5px;'>";
    echo "<h3 style='color: green;'>üéâ SMTP —Ä–∞–±–æ—Ç–∞–µ—Ç!</h3>";
    echo "<p>–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ <code>send_message_improved.php</code></p>";
    echo "</div>";
} else {
    echo "<div style='background: #f8d7da; padding: 20px; margin: 20px 0; border-radius: 5px;'>";
    echo "<h3 style='color: red;'>‚ùå SMTP –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</h3>";
    echo "<p>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–ø—Ä–∞–≤–∫–∏:</p>";
    echo "<ul>";
    echo "<li><strong>Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</strong> - —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±</li>";
    echo "<li><strong>–í–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã</strong> - SendGrid, Mailgun</li>";
    echo "<li><strong>–†–µ–∑–µ—Ä–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞</strong> - —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é mail()</li>";
    echo "</ul>";
    echo "</div>";
}

echo "<div style='margin: 20px 0;'>";
echo "<a href='javascript:history.back()' style='display: inline-block; padding: 10px 20px; background: #6c757d; color: white; text-decoration: none; border-radius: 5px;'>‚Üê –ù–∞–∑–∞–¥</a>";
if ($any_success) {
    echo "<a href='send_message_improved.php' style='display: inline-block; padding: 10px 20px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; margin-left: 10px;'>üìß –£–ª—É—á—à–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫</a>";
}
echo "<a href='send_message_fallback.php' style='display: inline-block; padding: 10px 20px; background: #17a2b8; color: white; text-decoration: none; border-radius: 5px; margin-left: 10px;'>üîÑ –†–µ–∑–µ—Ä–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫</a>";
echo "</div>";

// –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Mail.ru
echo "<div style='background: #fff3cd; padding: 20px; margin: 20px 0; border: 1px solid #ffeaa7; border-radius: 5px;'>";
echo "<h3>üìß –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Mail.ru:</h3>";
echo "<ol>";
echo "<li><strong>–í–∫–ª—é—á–∏—Ç–µ SMTP:</strong><br>";
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü–æ—á—Ç–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã ‚Üí –í–∫–ª—é—á–∏—Ç–µ IMAP –∏ SMTP</li>";
echo "<li><strong>–ü–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (–µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç):</strong><br>";
echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –ü–∞—Ä–æ–ª–∏ –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π ‚Üí –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</li>";
echo "<li><strong>–û—Ç–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é</strong> (–≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞)</li>";
echo "<li><strong>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É '–°–ø–∞–º'</strong> - –ø–µ—Ä–≤—ã–µ –ø–∏—Å—å–º–∞ –º–æ–≥—É—Ç —Ç—É–¥–∞ –ø–æ–ø–∞–¥–∞—Ç—å</li>";
echo "</ol>";
echo "</div>";
?>